@model Prochat.User
@{
    ViewBag.Title = "ProChat";
}
<div class="container">
    <div id="discussion"></div>
    <textarea id="message"></textarea>
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    
</div>

<style>
    .container {
        height: auto;
        max-width: 1200px;
    }

    #message {
        width: 100%;
        max-width: 1000px;
    }

    #discussion {
        height: 880px;
        overflow: scroll;
    }

    body {
        background-color: #D7D7D7;
    }

   
</style>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <script type="text/javascript">


    $(function () {
        // Reference the auto-generated proxy for the hub.


        var chat = $.connection.ChatHub;

        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message, messageNumber) {
            // Add the message to the page.
            $('#discussion').append('<div class="strangerMessage" id="' + name + messageNumber + '"><strong>' + htmlEncode(name + "    " + messageNumber)
                 + '</strong>' + htmlEncode(message) + '<hr></div>');
            var elem = document.getElementById('discussion');
            elem.scrollTop = elem.scrollHeight;

            $('#embedToggle' + messageNumber).click(function (e) {
                if ($('#embedToggle' + messageNumber).text() == "Hide") {

                    $('#embedData' + messageNumber).hide();
                    $('#embedToggle' + messageNumber).text("Show");
                }
                else {
                    $('#embedData' + messageNumber).show();
                    $('#embedToggle' + messageNumber).text("Hide");
                }
                
            });
        };

        var username = '@Model.UserName';


        if (username == "Default") {
            var entered = prompt("What would you like your username to be?: ", "Tester" + Math.round(Math.random() * 1000));
            '@Model.UserName = entered';
            username = entered;
            }


            $('#displayname').val(username);


            // Set initial focus to message input box.
            $('#message').focus();

            $('#message').keypress(keypressHandler);

            // Start the connection.
            $.connection.hub.start().done(function () {
                chat.server.history();
                $('#sendmessage').click(function () {

                    sendMessage(chat);
                });


            });
        });

        function keypressHandler(e) {
            if (e.which == 13) {
                $('#sendmessage').blur();
                var chat = $.connection.ChatHub;
                sendMessage(chat);
            }
        }

        function sendMessage(chat) {

            // Call the Send method on the hub.
            chat.server.send($('#displayname').val(), $('#message').val());
            // Clear text box and reset focus for next comment.
            $('#message').val('').focus();

        }

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            //var encodedValue = $('<div />').text(value).html();
            var encodedValue = "<div>" + value + "</div>";
            return encodedValue;
        }
    </script>
}